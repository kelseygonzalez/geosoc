gay_marriage <- malDF %>%
filter(variable == "gay_marriage")  %>%
rename(`Percent Pro Marriage-Equality` = percent)
jews_neighbor <- malDF %>%
filter(variable == "jews_neighbor")  %>%
rename(`Percent Accepts Jewish Neighbors` = percent)
muslims_neighbor <- malDF %>%
filter(variable == "muslims_neighbor")  %>%
rename(`Percent Accepts Muslim Neighbors` = percent)
abortion <- joinCountryData2Map(abortion, joinCode = "NAME",
nameJoinColumn = "country")
gay_marriage <- joinCountryData2Map(gay_marriage, joinCode = "NAME",
nameJoinColumn = "country")
jews_neighbor <- joinCountryData2Map(jews_neighbor, joinCode = "NAME",
nameJoinColumn = "country")
muslims_neighbor <- joinCountryData2Map(muslims_neighbor, joinCode = "NAME",
nameJoinColumn = "country")
# Chunk 6
## Specify the colourPalette argument
abortion <- mapCountryData(abortion,
nameColumnToPlot="Percent Pro-Life",
catMethod = "pretty",
missingCountryCol = gray(.8),
xlim = c(-20, 59),
ylim = c(35, 71),
asp = 1)
gay_marriage <- mapCountryData(gay_marriage,
nameColumnToPlot="Percent Pro Marriage-Equality",
catMethod = "pretty",
missingCountryCol = gray(.8),
xlim = c(-20, 59),
ylim = c(35, 71),
asp = 1)
jews_neighbor <- mapCountryData(jews_neighbor,
nameColumnToPlot="Percent Accepts Jewish Neighbors",
catMethod = "pretty",
missingCountryCol = gray(.8),
xlim = c(-20, 59),
ylim = c(35, 71),
asp = 1)
muslims_neighbor <- mapCountryData(muslims_neighbor,
nameColumnToPlot="Percent Accepts Muslim Neighbors",
catMethod = "pretty",
missingCountryCol = gray(.8),
xlim = c(-20, 59),
ylim = c(35, 71),
asp = 1)
# Chunk 7
props <- df %>%
mutate(high = ifelse(country == "Switzerland", country, NA),
high = ifelse(country == "Denmark", country, high),
high = ifelse(country == "Hungary", country, high))
proportions_all <- as.data.frame(rbind(as.data.frame(prop.table(table(props$jews_neighbor))),
as.data.frame(prop.table(table(props$muslims_neighbor))),
as.data.frame(prop.table(table(props$religious))),
as.data.frame(prop.table(table(props$gay_marriage2))),
as.data.frame(prop.table(table(props$abortion2)))))
colnames(proportions_all) <- c("Variable","Overall")
proportions <- as.data.frame(rbind(prop.table(table(props$jews_neighbor,props$high), 2),
prop.table(table(props$muslims_neighbor,props$high), 2),
prop.table(table(props$religious,props$high), 2),
prop.table(table(props$gay_marriage2,props$high), 2),
prop.table(table(props$abortion2,props$high), 2)))
total_proportions_table <- cbind(proportions_all,proportions)
# Chunk 10
reg <- df %>%
mutate(`Pro Abortion` = relevel(as.factor(abortion2),
ref = "Pro_Life"),
`Marriage Equality` = relevel(as.factor(gay_marriage2),
ref = "Against_Marriage_Equality"),
`Ok with Jewish Neighbor` = relevel(as.factor(jews_neighbor),
ref = "Rejects_Jews"),
`Ok with Muslim Neighbor` = relevel(as.factor(muslims_neighbor),
ref = "Rejects_Muslims"),
`Respondent is Religious` = relevel(as.factor(religious),
ref = "Not_Religious")) %>%
rename(`Water Border` = p_combwater,
`Mountainous Border` = p_mount_tot,
`Percentage Internet Users` = interusers,
`Percentage Urban Residents` = perc_urban,
`Logged GDP` = l_GDP,
`Percentage Tertiary Educ`= tert)
model1  <- glm(`Pro Abortion` ~ `Water Border` +
`Mountainous Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
model2  <- glm(`Marriage Equality` ~ `Water Border` +
`Mountainous Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
model3  <- glm(`Ok with Jewish Neighbor` ~ `Water Border` +
`Mountainous Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
model4  <- glm(`Ok with Muslim Neighbor` ~ `Water Border` +
`Mountainous Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
# stargazer(model1, model2, model3, model4,
# title="Regression Results", align=TRUE)
write.csv(reg, file = "reg_for_modeling.csv")
#predicted probabilities for abortion
library(aod)
water_predictions <- tibble(`Water Border` = c(0, 25, 50, 75, 100, 0, 25, 50, 75, 100),
`Mountainous Border` = rep.int(mean(reg$`Mountainous Border`), 10),
`Percentage Internet Users` = rep.int(mean(reg$`Percentage Internet Users`), 10),
`Percentage Urban Residents` = rep.int(mean(reg$`Percentage Urban Residents`),10),
`Percentage Tertiary Educ` = rep.int(mean(reg$`Percentage Tertiary Educ`),10),
`Logged GDP` = rep.int(mean(reg$`Logged GDP`),10),
`Respondent is Religious` = c(rep.int(levels(reg$`Respondent is Religious`)[2],5),
rep.int(levels(reg$`Respondent is Religious`)[1],5)))
mtn_predictions <-  tibble(`Water Border` = rep.int(mean(reg$`Water Border`), 5),
`Mountainous Border`  = c(0, 25, 50, 75, 100),
`Percentage Internet Users` = rep.int(mean(reg$`Percentage Internet Users`), 5),
`Percentage Urban Residents` = rep.int(mean(reg$`Percentage Urban Residents`),5),
`Percentage Tertiary Educ` = rep.int(mean(reg$`Percentage Tertiary Educ`),5),
`Logged GDP` = rep.int(mean(reg$`Logged GDP`),5),
`Respondent is Religious` = rep.int(levels(reg$`Respondent is Religious`)[2],5))
water_predictions$prob <- predict(model1, newdata = water_predictions, type = "response")
mtn_predictions$prob <- predict(model1, newdata = mtn_predictions, type = "response")
water_predictions <- cbind(reg,predict(model1, reg, type="response"))
water_predictions %>%
rename(pred = `predict(model1, reg, type = "response")`) %>%
ggplot(aes(x = `Water Border`, y = pred)) +
geom_point()
newdata1
pred_probs <- read_csv("pred_probs.csv")
pred_probs %>%
ggplot(aes(x = percent, y = predicted_probability, color = bordertype)) +
geom_line() +
facet_wrap(~ variable)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(tidyverse)
library(kableExtra) #printing normal tables
library(stargazer) #printing regression tables
library(rworldmap)
df <- read_csv("data_output/countries_merged.csv") %>% drop_na() #drop NAs
df %>%
select(p_combwater, p_mount_tot, country, abortion2) %>%
mutate(abortion2 = ifelse(abortion2 == "Pro_Choice", 1, 0)) %>%
group_by(country) %>%
summarize(Water = first(p_combwater),
Mountains = first(p_mount_tot),
Neither = 1 - Water - Mountains,
Neither = ifelse(Neither < 0, 0, Neither),
abortion2 = mean(abortion2))  %>%
pivot_longer(-c(country, abortion2), names_to = "type", values_to = "percent") %>%
ggplot(aes(x = reorder(country, abortion2), y = percent, fill = type)) +
geom_col()+
theme(axis.text.x = element_text(size=8, angle=90, vjust=0.5, hjust=1)) +
ggtitle("Figure 1: Border Distributions by Country sorted by liberality",
subtitle = "Sorted from least accepting of abortion to most") +
xlab("") + ylab("Percent of Border") +
scale_fill_manual(values=c("#397741", "#E69F00", "#56B4E9", "#FFFFFF"))
countries <- df %>%
group_by(country) %>%
summarize(water = first(p_combwater),
mountains = first(p_mount_tot))
# ten_countries <- countries %>%
#   select(country) %>%
#   sample_n(.,14)
# ten_countries <- rbind(ten_countries, "Switzerland", "Denmark", "Hungary")
ten_countries <- c("Austria", "Bulgaria", "Romania", "Sweden", "Norway", "Russia", "Estonia", "Latvia", "Ireland", "Switzerland", "Denmark", "Hungary", "Slovak Republic", "Croatia")
countries <- countries %>%
mutate(label = ifelse(country %in% ten_countries,
as.character(country),
""))
ggplot(countries,
aes(x = water, y = mountains)) +
geom_point() +
ggrepel::geom_text_repel(aes(label = label),
size = 4.5,
point.padding = .2,
box.padding = .3,
force = 1,
min.segment.length = 0)+
ggtitle("Figure 2: Border Distributions by Country") +
xlab("Percentage of Border that is Water") +
ylab("Percentage of Border that is Mountainous")
malDF <- df %>%
mutate(abortion = ifelse(abortion2 == "Pro_Choice", 1, 0),
gay_marriage = ifelse(gay_marriage2 == "Pro_Marriage_Equality", 1, 0),
jews_neighbor = ifelse(jews_neighbor == "Accepts_Jews", 1, 0),
muslims_neighbor = ifelse(muslims_neighbor == "Accepts_Muslims",1, 0)) %>%
group_by(country) %>%
summarize(abortion = mean(abortion),
gay_marriage = mean(gay_marriage),
jews_neighbor = mean(jews_neighbor),
muslims_neighbor = mean(muslims_neighbor)) %>%
pivot_longer(-country, names_to = "variable", values_to = "percent")
abortion <- malDF %>%
filter(variable == "abortion") %>%
rename(`Percent Pro-Life` = percent)
gay_marriage <- malDF %>%
filter(variable == "gay_marriage")  %>%
rename(`Percent Pro Marriage-Equality` = percent)
jews_neighbor <- malDF %>%
filter(variable == "jews_neighbor")  %>%
rename(`Percent Accepts Jewish Neighbors` = percent)
muslims_neighbor <- malDF %>%
filter(variable == "muslims_neighbor")  %>%
rename(`Percent Accepts Muslim Neighbors` = percent)
abortion <- joinCountryData2Map(abortion, joinCode = "NAME",
nameJoinColumn = "country")
gay_marriage <- joinCountryData2Map(gay_marriage, joinCode = "NAME",
nameJoinColumn = "country")
jews_neighbor <- joinCountryData2Map(jews_neighbor, joinCode = "NAME",
nameJoinColumn = "country")
muslims_neighbor <- joinCountryData2Map(muslims_neighbor, joinCode = "NAME",
nameJoinColumn = "country")
## Specify the colourPalette argument
abortion <- mapCountryData(abortion,
nameColumnToPlot="Percent Pro-Life",
catMethod = "pretty",
missingCountryCol = gray(.8),
xlim = c(-20, 59),
ylim = c(35, 71),
asp = 1)
gay_marriage <- mapCountryData(gay_marriage,
nameColumnToPlot="Percent Pro Marriage-Equality",
catMethod = "pretty",
missingCountryCol = gray(.8),
xlim = c(-20, 59),
ylim = c(35, 71),
asp = 1)
jews_neighbor <- mapCountryData(jews_neighbor,
nameColumnToPlot="Percent Accepts Jewish Neighbors",
catMethod = "pretty",
missingCountryCol = gray(.8),
xlim = c(-20, 59),
ylim = c(35, 71),
asp = 1)
muslims_neighbor <- mapCountryData(muslims_neighbor,
nameColumnToPlot="Percent Accepts Muslim Neighbors",
catMethod = "pretty",
missingCountryCol = gray(.8),
xlim = c(-20, 59),
ylim = c(35, 71),
asp = 1)
malDF <- df %>%
mutate(abortion = ifelse(abortion2 == "Pro_Choice", 1, 0),
gay_marriage = ifelse(gay_marriage2 == "Pro_Marriage_Equality", 1, 0),
jews_neighbor = ifelse(jews_neighbor == "Accepts_Jews", 1, 0),
muslims_neighbor = ifelse(muslims_neighbor == "Accepts_Muslims",1, 0)) %>%
group_by(country) %>%
summarize(abortion = mean(abortion),
gay_marriage = mean(gay_marriage),
jews_neighbor = mean(jews_neighbor),
muslims_neighbor = mean(muslims_neighbor)) %>%
pivot_longer(-country, names_to = "variable", values_to = "percent")
abortion <- malDF %>%
filter(variable == "abortion") %>%
rename(`Percent Pro-Life` = percent)
gay_marriage <- malDF %>%
filter(variable == "gay_marriage")  %>%
rename(`Percent Pro Marriage-Equality` = percent)
jews_neighbor <- malDF %>%
filter(variable == "jews_neighbor")  %>%
rename(`Percent Accepts Jewish Neighbors` = percent)
muslims_neighbor <- malDF %>%
filter(variable == "muslims_neighbor")  %>%
rename(`Percent Accepts Muslim Neighbors` = percent)
abortion <- joinCountryData2Map(abortion, joinCode = "NAME",
nameJoinColumn = "country")
gay_marriage <- joinCountryData2Map(gay_marriage, joinCode = "NAME",
nameJoinColumn = "country")
jews_neighbor <- joinCountryData2Map(jews_neighbor, joinCode = "NAME",
nameJoinColumn = "country")
muslims_neighbor <- joinCountryData2Map(muslims_neighbor, joinCode = "NAME",
nameJoinColumn = "country")
## Specify the colourPalette argument
abortion <- mapCountryData(abortion,
nameColumnToPlot="Percent Pro-Life",
catMethod = "pretty",
missingCountryCol = gray(.8),
xlim = c(-20, 59),
ylim = c(35, 71),
asp = 1)
gay_marriage <- mapCountryData(gay_marriage,
nameColumnToPlot="Percent Pro Marriage-Equality",
catMethod = "pretty",
missingCountryCol = gray(.8),
xlim = c(-20, 59),
ylim = c(35, 71),
asp = 1)
jews_neighbor <- mapCountryData(jews_neighbor,
nameColumnToPlot="Percent Accepts Jewish Neighbors",
catMethod = "pretty",
missingCountryCol = gray(.8),
xlim = c(-20, 59),
ylim = c(35, 71),
asp = 1)
muslims_neighbor <- mapCountryData(muslims_neighbor,
nameColumnToPlot="Percent Accepts Muslim Neighbors",
catMethod = "pretty",
missingCountryCol = gray(.8),
xlim = c(-20, 59),
ylim = c(35, 71),
asp = 1)
props <- df %>%
mutate(high = ifelse(country == "Switzerland", country, NA),
high = ifelse(country == "Denmark", country, high),
high = ifelse(country == "Hungary", country, high))
proportions_all <- as.data.frame(rbind(as.data.frame(prop.table(table(props$jews_neighbor))),
as.data.frame(prop.table(table(props$muslims_neighbor))),
as.data.frame(prop.table(table(props$religious))),
as.data.frame(prop.table(table(props$gay_marriage2))),
as.data.frame(prop.table(table(props$abortion2)))))
colnames(proportions_all) <- c("Variable","Overall")
proportions <- as.data.frame(rbind(prop.table(table(props$jews_neighbor,props$high), 2),
prop.table(table(props$muslims_neighbor,props$high), 2),
prop.table(table(props$religious,props$high), 2),
prop.table(table(props$gay_marriage2,props$high), 2),
prop.table(table(props$abortion2,props$high), 2)))
total_proportions_table <- cbind(proportions_all,proportions)
total_proportions_table %>%
select(-Variable) %>%
kable("latex", round(digits = 3)) %>%
kable_styling(position = "center") %>%
add_header_above(c("",
"All Countries" = 1,
"High Water" = 1,
"Low Water, \n Low Mountains" = 1,
"High Mountains" = 1)) %>%
add_header_above(c("",
"All Countries" = 1,
"Example Countries" = 3))
df %>%
group_by(country) %>%
summarize(`Internet Users` = mean(interusers),
`Percent \n Urban Residents` = 0.01*mean(perc_urban),
`Percent Entrolled \n in Tertiary Educ` = 0.01*mean(tert),
`GDP Per Capita` = mean(GDP),
N = n()) %>%
kable("latex",
round(digits = 2),
escape = FALSE,
col.names = c("Country",
"Internet Users",
"Urban Residents",
"Enrolled in Tertiary Educ",
"GDP Per Capita",
"N")) %>%
kable_styling(position = "center")
reg <- df %>%
mutate(`Pro Abortion` = relevel(as.factor(abortion2),
ref = "Pro_Life"),
`Marriage Equality` = relevel(as.factor(gay_marriage2),
ref = "Against_Marriage_Equality"),
`Ok with Jewish Neighbor` = relevel(as.factor(jews_neighbor),
ref = "Rejects_Jews"),
`Ok with Muslim Neighbor` = relevel(as.factor(muslims_neighbor),
ref = "Rejects_Muslims"),
`Respondent is Religious` = relevel(as.factor(religious),
ref = "Not_Religious")) %>%
rename(`Water Border` = p_combwater,
`Mountainous Border` = p_mount_tot,
`Percentage Internet Users` = interusers,
`Percentage Urban Residents` = perc_urban,
`Logged GDP` = l_GDP,
`Percentage Tertiary Educ`= tert)
model1  <- glm(`Pro Abortion` ~ `Water Border` +
`Mountainous Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
model2  <- glm(`Marriage Equality` ~ `Water Border` +
`Mountainous Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
model3  <- glm(`Ok with Jewish Neighbor` ~ `Water Border` +
`Mountainous Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
model4  <- glm(`Ok with Muslim Neighbor` ~ `Water Border` +
`Mountainous Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
# stargazer(model1, model2, model3, model4,
# title="Regression Results", align=TRUE)
write.csv(reg, file = "reg_for_modeling.csv")
model1a  <- glm(`Pro Abortion` ~ `Water Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
model1b  <- glm(`Pro Abortion` ~
`Mountainous Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
stargazer(model1a, model1b, model1,
title="Regression Results for Abortion Attitudes",
align=TRUE,
apply.coef = exp,
notes = "Standard Errors In Parentheses; \\ Coeffients as Odds-Ratios",
notes.append = TRUE)
model2a  <- glm(`Marriage Equality` ~ `Water Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
model2b  <- glm(`Marriage Equality` ~
`Mountainous Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
stargazer(model2a, model2b, model2,
title="Regression Results for Marriage Equality Attitudes",
align=TRUE,
apply.coef = exp,
notes = "Standard Errors In Parentheses; \\ Coeffients as Odds-Ratios",
notes.append = TRUE)
model3a  <- glm(`Ok with Jewish Neighbor` ~ `Water Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
model3b  <- glm(`Ok with Jewish Neighbor` ~
`Mountainous Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
stargazer(model3a, model3b, model3,
title="Regression Results for Jewish Neighbor Acceptance  Attitudes",
align=TRUE,
apply.coef = exp,
notes = "Standard Errors In Parentheses; \\ Coeffients as Odds-Ratios",
notes.append = TRUE)
model4a  <- glm(`Ok with Muslim Neighbor` ~ `Water Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
model4b  <- glm(`Ok with Muslim Neighbor` ~
`Mountainous Border` +
`Percentage Internet Users` +
`Percentage Urban Residents` +
`Percentage Tertiary Educ` +
`Logged GDP` +
`Respondent is Religious`,
data = reg,
family = "binomial"(link="logit"))
stargazer(model4a, model4b, model4,
title="Regression Results for Muslim Neighbor Acceptance Attitudes",
align=TRUE,
apply.coef = exp,
notes = "Standard Errors In Parentheses; \\ Coeffients as Odds-Ratios",
notes.append = TRUE)
